test_run = require('test_run').new()
---
...
vshard = require('vshard')
---
...
lcfg = require('vshard.cfg')
---
...
util = require('util')
---
...
--
-- Check sharding config sanity.
--
function check(cfg) return util.check_error(lcfg.check, cfg) end
---
...
-- Not table.
check(100)
---
- Sharding config must be array of replicasets
...
-- Replicaset is not table.
check({100})
---
- Replicaset must be a table
...
replica = {}
---
...
replicaset = {replicas = {['replica_uuid'] = replica}}
---
...
cfg = {['replicaset_uuid'] = replicaset}
---
...
-- URI is not string.
check(cfg)
---
- replica uri must be string
...
replica.uri = 100
---
...
check(cfg)
---
- replica uri must be string
...
replica.uri = 'uri:uri@uri'
---
...
-- Name is not string.
check(cfg)
---
- replica name must be string
...
replica.name = 100
---
...
check(cfg)
---
- replica name must be string
...
replica.name = 'storage'
---
...
-- Master is not boolean.
replica.master = 100
---
...
check(cfg)
---
- '"master" must be boolean'
...
replica.master = true
---
...
-- Multiple masters.
replica2 = {uri = 'uri:uri@uri2', name = 'storage2', master = true}
---
...
replicaset.replicas['id2'] = replica2
---
...
check(cfg)
---
- Only one master is allowed per replicaset
...
replicaset.replicas['id2'] = nil
---
...
-- URI duplicate in one replicaset.
replica2 = {uri = 'uri:uri@uri', name = 'storage2'}
---
...
replicaset.replicas['id2'] = replica2
---
...
check(cfg)
---
- Duplicate uri uri:uri@uri
...
replicaset.replicas['id2'] = nil
---
...
-- URI duplicate in different replicasets.
replicaset2 = {replicas = {['id2'] = {uri = 'uri:uri@uri', name = 'storage2', master = true}}}
---
...
cfg['rsid2'] = replicaset2
---
...
check(cfg)
---
- Duplicate uri uri:uri@uri
...
cfg['rsid2'] = nil
---
...
-- UUID duplicate in different replicasets.
replicaset2 = {replicas = {['id3'] = {uri = 'uri:uri@uri2', name = 'storage', master = true}}}
---
...
cfg['rsid2'] = replicaset2
---
...
replicaset3 = {replicas = {['id3'] = {uri = 'uri:uri@uri3', name = 'storage', master = true}}}
---
...
cfg['rsid3'] = replicaset3
---
...
check(cfg)
---
- Duplicate uuid id3
...
cfg['rsid2'] = nil
---
...
cfg['rsid3'] = nil
---
...
--
-- gh-40: replicaset weight. Weight is used by a rebalancer to
-- correctly spead buckets on a cluster.
--
replicaset.weight = '100'
---
...
check(cfg)
---
- Replicaset weight must be either nil or non-negative number
...
replicaset.weight = -100
---
...
check(cfg)
---
- Replicaset weight must be either nil or non-negative number
...
replicaset.weight = 0
---
...
lcfg.check(cfg)
---
...
replicaset.weight = 0.123
---
...
lcfg.check(cfg)
---
...
replicaset.weight = 100000
---
...
lcfg.check(cfg)
---
...
