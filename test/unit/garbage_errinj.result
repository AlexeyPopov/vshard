test_run = require('test_run').new()
---
...
vshard = require('vshard')
---
...
fiber = require('fiber')
---
...
vshard.storage.internal.shard_index = 'bucket_id'
---
...
format = {}
---
...
format[1] = {name = 'id', type = 'unsigned'}
---
...
format[2] = {name = 'status', type = 'string', is_nullable = true}
---
...
_bucket = box.schema.create_space('_bucket', {format = format})
---
...
_ = _bucket:create_index('pk')
---
...
_ = _bucket:create_index('status', {parts = {{2, 'string'}}, unique = false})
---
...
_bucket:replace{1, vshard.consts.BUCKET.ACTIVE}
---
- [1, 'active']
...
_bucket:replace{2, vshard.consts.BUCKET.RECEIVING}
---
- [2, 'receiving']
...
_bucket:replace{3, vshard.consts.BUCKET.ACTIVE}
---
- [3, 'active']
...
_bucket:replace{4, vshard.consts.BUCKET.SENT}
---
- [4, 'sent']
...
_bucket:replace{5, vshard.consts.BUCKET.GARBAGE}
---
- [5, 'garbage']
...
s = box.schema.create_space('test')
---
...
pk = s:create_index('pk')
---
...
sk = s:create_index('bucket_id', {parts = {{2, 'unsigned'}}, unique = false})
---
...
s:replace{1, 1}
---
- [1, 1]
...
s:replace{2, 1}
---
- [2, 1]
...
s:replace{3, 2}
---
- [3, 2]
...
s:replace{4, 2}
---
- [4, 2]
...
s:replace{5, 100}
---
- [5, 100]
...
s:replace{6, 100}
---
- [6, 100]
...
s:replace{7, 4}
---
- [7, 4]
...
s:replace{8, 5}
---
- [8, 5]
...
s2 = box.schema.create_space('test2')
---
...
pk2 = s2:create_index('pk')
---
...
sk2 = s2:create_index('bucket_id', {parts = {{2, 'unsigned'}}, unique = false})
---
...
s2:replace{1, 1}
---
- [1, 1]
...
s2:replace{3, 3}
---
- [3, 3]
...
for i = 7, 1107 do s:replace{i, 200} end
---
...
s2:replace{4, 200}
---
- [4, 200]
...
s2:replace{5, 100}
---
- [5, 100]
...
s2:replace{5, 300}
---
- [5, 300]
...
s2:replace{6, 4}
---
- [6, 4]
...
s2:replace{7, 5}
---
- [7, 5]
...
garbage_step = vshard.storage.internal.collect_garbage_step
---
...
-- Restart garbage collection.
garbage_step()
---
- true
...
--
-- Test _bucket generation change during garbage buckets search.
--
s:truncate()
---
...
_ = _bucket:on_replace(function() vshard.storage.internal.bucket_generation = vshard.storage.internal.bucket_generation + 1 end)
---
...
vshard.storage.internal.errinj.ERRINJ_BUCKET_FIND_GARBAGE_DELAY = true
---
...
f = fiber.create(function() garbage_step() end)
---
...
_bucket:replace{4, vshard.consts.BUCKET.GARBAGE}
---
- [4, 'garbage']
...
s:replace{5, 4}
---
- [5, 4]
...
s:replace{6, 4}
---
- [6, 4]
...
#s:select{}
---
- 2
...
vshard.storage.internal.errinj.ERRINJ_BUCKET_FIND_GARBAGE_DELAY = false
---
...
while f:status() ~= 'dead' do fiber.sleep(0.1) end
---
...
-- Nothing is deleted - _bucket:replace() has changed _bucket
-- generation during search of garbage buckets.
#s:select{}
---
- 2
...
_bucket:select{4}
---
- - [4, 'garbage']
...
-- Next step deletes garbage ok.
garbage_step()
---
- true
...
#s:select{}
---
- 0
...
_bucket:delete{4}
---
- [4, 'garbage']
...
s2:drop()
---
...
s:drop()
---
...
_bucket:drop()
---
...
